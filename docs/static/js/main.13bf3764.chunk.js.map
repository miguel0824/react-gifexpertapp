{"version":3,"sources":["Components/AddCategory.js","Helpers/getGifs.js","Components/GifGridItem.js","Components/GifGrid.js","Hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategory","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","setCategories","c","ReactDOM","render","document","getElementById"],"mappings":"mMAGe,SAASA,EAAT,GAAqC,IAAfC,EAAc,EAAdA,YAAc,EACXC,mBAAS,IADE,mBACxCC,EADwC,KAC5BC,EAD4B,KAc/C,OACI,sBAAMC,SAVS,SAACC,GAChBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAO,IACxBR,GAAY,SAAAS,GAAI,OAAGP,GAAH,mBAAiBO,OACjCN,EAAc,MAMlB,SACI,uBACAO,KAAK,OACLC,MAAOT,EACPU,SAjBgB,SAACP,GACrBF,EAAcE,EAAEQ,OAAOF,Y,mCCNlBG,EAAO,uCAAC,WAAOC,GAAP,uBAAAC,EAAA,6DACXC,EADW,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAMF,GAFN,cAEXG,EAFW,gBAGEA,EAAKC,OAHP,uBAGVC,EAHU,EAGVA,KACDC,EAAKD,EAAKE,KAAI,SAAAC,GAAM,IAAD,EACrB,MAAM,CACFC,GAAGD,EAAIC,GACPC,MAAMF,EAAIE,MACVV,IAAG,UAACQ,EAAIG,cAAL,aAAC,EAAYC,iBAAiBZ,QARxB,kBAWVM,GAXU,4CAAD,sDCEPO,EAAc,SAAC,GAAoB,IAAnBJ,EAAkB,EAAlBA,GAAGC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAElC,OADAc,QAAQC,IAAI,CAACN,KAAGC,QAAMV,QAElB,sBAAKgB,UAAU,6CAAf,UACI,qBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,4BAAIA,QCHHS,EAAU,SAAC,GAAgB,IAAfrB,EAAc,EAAdA,SAAc,ECAb,SAACA,GAAY,IAAD,EACRd,mBAAS,CAC/BqB,KAAK,GACLe,SAAQ,IAHsB,mBAC3BC,EAD2B,KACpBC,EADoB,KAalC,OARAC,qBAAU,WACN1B,EAAQC,GAAU0B,MAAK,SAAAC,GACnBH,EAAS,CACLjB,KAAKoB,EACLL,SAAQ,SAGlB,CAACtB,IACIuB,EDZqBK,CAAa5B,GAA7Ba,EADuB,EAC5BN,KAAYe,EADgB,EAChBA,QAGnB,OAFAN,QAAQC,IAAIK,GAGR,qCACI,oBAAIJ,UAAU,wCAAd,SAAuDlB,IACtDsB,GAAU,mBAAGJ,UAAU,mCAAb,qBACX,qBAAKA,UAAU,YAAf,SAEQL,EAAOJ,KAAI,SAAAC,GAAG,OACd,cAAC,EAAD,eAEIA,GADCA,EAAIC,aEbhBkB,EAAa,WAAI,MAEW3C,mBAAS,CAAC,iBAFrB,mBAElB4C,EAFkB,KAENC,EAFM,KAQ1B,OACI,qCACI,8CACA,cAAC/C,EAAD,CAAaC,YAAa8C,IAC1B,uBAEA,6BAEQD,EAAWrB,KAAI,SAAAuB,GAAC,OACP,cAAC,EAAD,CAEGhC,SAAUgC,GADLA,Y,MCfrCC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.13bf3764.chunk.js","sourcesContent":["import React, { useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function AddCategory({setCategory}) {\r\n    const [inputValue, setinputValue] = useState('');\r\n    const handleInputChange=(e)=>{\r\n        setinputValue(e.target.value);\r\n    };\r\n    const handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n        if(inputValue.trim().length>2){\r\n            setCategory(cats=>[inputValue,...cats]);\r\n            setinputValue('');\r\n        }\r\n        \r\n        \r\n    };\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n            type=\"text\"\r\n            value={inputValue}\r\n            onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\nAddCategory.propTypes={\r\n    setCategory:PropTypes.func.isRequired\r\n}\r\n","export const getGifs=async (category)=>{\r\n    const url=`https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=LPWawzWlxBXxsTFGINCtGpqv5Y5paUb1`;\r\n    const resp=await fetch(url);\r\n    const {data}=await resp.json();\r\n    const gifs=data.map(img=>{\r\n        return{\r\n            id:img.id,\r\n            title:img.title,\r\n            url:img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return(gifs);\r\n    //setimages(gifs);\r\n};","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n    console.log({id,title,url});\r\n    return (\r\n        <div className=\"card animate__animated animate__backInLeft\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../Hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n    const {data:images,loading}=useFetchGifs(category);\r\n    console.log(loading);\r\n    \r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__backInLeft\">{category}</h3>\r\n            {loading &&<p className=\"animate__animated animate__flash\">Loading</p>}\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map(img=>(\r\n                    <GifGridItem\r\n                    key={img.id}\r\n                    {...img}\r\n                    />))\r\n                }\r\n                \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","//use es para hooks\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport{getGifs} from '../Helpers/getGifs';\r\nexport const useFetchGifs=(category)=>{\r\n    const [state, setstate] = useState({\r\n        data:[],\r\n        loading:true\r\n    });\r\n    useEffect(()=>{\r\n        getGifs(category).then(imgs=>{\r\n            setstate({\r\n                data:imgs,\r\n                loading:false\r\n            });\r\n        });\r\n    },[category]);\r\n    return state;\r\n};\r\n","import React, { useState } from 'react';\r\nimport AddCategory from './Components/AddCategory';\r\nimport { GifGrid } from './Components/GifGrid';\r\nexport const GifExpertApp=()=>{\r\n    //const categories=['SNK','One Punch','Black Clover'];\r\n    const [ categories, setCategories] = useState(['Black Clover']);\r\n    // const handdleApp=()=>{\r\n    //     const agregar='algo';\r\n    //     //setCategories([...categories,agregar]);\r\n    //     setCategories(cats=>[...cats,agregar]);\r\n    // };\r\n    return(\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategory={setCategories}/>\r\n            <hr/>\r\n            \r\n            <ol>\r\n                {   \r\n                    categories.map(c=>\r\n                            (<GifGrid \r\n                                key={c}\r\n                                category={c}\r\n                                />)\r\n                         )\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n    \r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(   \n    <GifExpertApp />  ,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}